{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.module.css","containers/Auth/Auth.module.css","containers/Auth/Auth.js"],"names":["Input","props","inputElement","inputtype","className","classes","InputElement","onChange","changed","Label","label","module","exports","firebaseErrorMessages","Auth","state","user","email","password","isSignup","onChangeHandler","event","setState","target","name","value","onSwitchSingup","onSubmitHandler","preventDefault","authenticate","this","token","to","error","indexOf","response","data","message","style","color","marginTop","display","loading","type","minLength","buttonType","clicked","Component","connect","auth","userId","dispatch"],"mappings":"uHAAA,qCA6BeA,IA1BD,SAAAC,GACZ,IAAIC,EACJ,OAAQD,EAAME,WACZ,IAAK,QACHD,EACE,yCACEE,UAAWC,IAAQC,aACnBC,SAAUN,EAAMO,SACZP,IAGR,MACF,IAAK,WACHC,EAAe,8CAAcD,EAAd,CAAqBM,SAAUN,EAAMO,WAKxD,OACE,yBAAKJ,UAAWC,IAAQL,OACtB,2BAAOI,UAAWC,IAAQI,OAAQR,EAAMS,OACvCR,K,mBCvBPS,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,aAAe,8B,mBCA3FD,EAAOC,QAAU,CAAC,KAAO,qB,sNCQnBC,EAAwB,CAC5B,kBACA,oCACA,mBACA,oBACA,eACA,mDACA,8BACA,4CAGWC,EAAb,2MAEEC,MAAQ,CACNC,KAAM,CACJC,MAAO,GACPC,SAAU,IAEZC,UAAU,GAPd,EAUEC,gBAAkB,SAAAC,GAChB,EAAKC,SAAL,eACK,EAAKP,MADV,CAEEC,KAAK,eACA,EAAKD,MAAMC,KADZ,eAEDK,EAAME,OAAOC,KAAOH,EAAME,OAAOE,YAf1C,EAoBEC,eAAiB,WACf,EAAKJ,SAAL,eAAmB,EAAKP,MAAxB,CAA+BI,UAAW,EAAKJ,MAAMI,aArBzD,EAwBEQ,gBAAkB,SAAAN,GAChBA,EAAMO,iBACN,EAAK3B,MAAM4B,aACT,EAAKd,MAAMC,KAAKC,MAChB,EAAKF,MAAMC,KAAKE,SAChB,EAAKH,MAAMI,WA7BjB,qHAkCI,GAAyB,OAArBW,KAAK7B,MAAM8B,MAAgB,OAAO,kBAAC,IAAD,CAAUC,GAAG,MAEnD,IAAIC,EAAQ,KAgBZ,OAdIH,KAAK7B,MAAMgC,QACbA,EACEpB,EACEA,EAAsBqB,QACpBJ,KAAK7B,MAAMgC,MAAME,SAASC,KAAKH,MAAMI,SACnC,GAERJ,EACE,uBAAGK,MAAO,CAAEC,MAAO,MAAOC,UAAW,OAAQC,QAAS,UACnDR,IAML,6BACGH,KAAK7B,MAAMyC,QACV,kBAAC,IAAD,MAEA,yBAAKtC,UAAWC,IAAQS,MACrBmB,EACD,4BAAKH,KAAKf,MAAMI,SAAW,WAAa,SACxC,kBAAC,IAAD,CACEhB,UAAU,QACVK,QAASsB,KAAKV,gBACdV,MAAM,QACNiC,KAAK,QACLnB,KAAK,UAEP,kBAAC,IAAD,CACErB,UAAU,QACVK,QAASsB,KAAKV,gBACdV,MAAM,WACNiC,KAAK,WACLC,UAAW,EACXpB,KAAK,aAEP,kBAAC,IAAD,CAAQqB,WAAW,UAAUC,QAAShB,KAAKH,iBAA3C,UAGA,kBAAC,IAAD,CAAQkB,WAAW,SAASC,QAAShB,KAAKJ,gBAA1C,aACaI,KAAKf,MAAMI,SAAW,UAAY,iBA/E3D,GAA0B4B,aAwGXC,uBAhBS,SAAAjC,GACtB,MAAO,CACLgB,MAAOhB,EAAMkC,KAAKlB,MAClBmB,OAAQnC,EAAMkC,KAAKC,OACnBjB,MAAOlB,EAAMkC,KAAKhB,MAClBS,QAAS3B,EAAMkC,KAAKP,YAIG,SAAAS,GACzB,MAAO,CACLtB,aAAc,SAACZ,EAAOC,EAAUC,GAAlB,OACZgC,EAAStB,YAAaZ,EAAOC,EAAUC,QAI9B6B,CAA6ClC","file":"static/js/3.0c0ba091.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst Input = props => {\r\n  let inputElement;\r\n  switch (props.inputtype) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={classes.InputElement}\r\n          onChange={props.changed}\r\n          {...props}\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = <textarea {...props} onChange={props.changed} />;\r\n      break;\r\n    default:\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label className={classes.Label}>{props.label}</label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3L-Cj\",\"Label\":\"Input_Label__5EmBI\",\"InputElement\":\"Input_InputElement__3QcsQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__3oqXB\"};","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { authenticate } from \"../../store/actions/index\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport classes from \"./Auth.module.css\";\r\n\r\nconst firebaseErrorMessages = [\r\n  \"EMAIL_NOT_FOUND\",\r\n  \"Looks like you haven't registered\",\r\n  \"INVALID_PASSWORD\",\r\n  \"Wrong Credentials\",\r\n  \"EMAIL_EXISTS\",\r\n  \"A user with the same email exists. Try to login?\",\r\n  \"TOO_MANY_ATTEMPTS_TRY_LATER\",\r\n  \"Looks like something is wrong. Try later\"\r\n];\r\n\r\nexport class Auth extends Component {\r\n  componentDidMount() {}\r\n  state = {\r\n    user: {\r\n      email: \"\",\r\n      password: \"\"\r\n    },\r\n    isSignup: true\r\n  };\r\n\r\n  onChangeHandler = event => {\r\n    this.setState({\r\n      ...this.state,\r\n      user: {\r\n        ...this.state.user,\r\n        [event.target.name]: event.target.value\r\n      }\r\n    });\r\n  };\r\n\r\n  onSwitchSingup = () => {\r\n    this.setState({ ...this.state, isSignup: !this.state.isSignup });\r\n  };\r\n\r\n  onSubmitHandler = event => {\r\n    event.preventDefault();\r\n    this.props.authenticate(\r\n      this.state.user.email,\r\n      this.state.user.password,\r\n      this.state.isSignup\r\n    );\r\n  };\r\n\r\n  render() {\r\n    if (this.props.token !== null) return <Redirect to=\"/\" />;\r\n\r\n    let error = null;\r\n\r\n    if (this.props.error) {\r\n      error =\r\n        firebaseErrorMessages[\r\n          firebaseErrorMessages.indexOf(\r\n            this.props.error.response.data.error.message\r\n          ) + 1\r\n        ];\r\n      error = (\r\n        <p style={{ color: \"red\", marginTop: \"10px\", display: \"block\" }}>\r\n          {error}\r\n        </p>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.props.loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <div className={classes.Auth}>\r\n            {error}\r\n            <h1>{this.state.isSignup ? \"Register\" : \"Login\"}</h1>\r\n            <Input\r\n              inputtype=\"input\"\r\n              changed={this.onChangeHandler}\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n            />\r\n            <Input\r\n              inputtype=\"input\"\r\n              changed={this.onChangeHandler}\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              minLength={6}\r\n              name=\"password\"\r\n            />\r\n            <Button buttonType=\"Success\" clicked={this.onSubmitHandler}>\r\n              Submit\r\n            </Button>\r\n            <Button buttonType=\"Danger\" clicked={this.onSwitchSingup}>\r\n              Switch to {this.state.isSignup ? \"Sign in\" : \"Sign up\"}\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    error: state.auth.error,\r\n    loading: state.auth.loading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    authenticate: (email, password, isSignup) =>\r\n      dispatch(authenticate(email, password, isSignup))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n"],"sourceRoot":""}