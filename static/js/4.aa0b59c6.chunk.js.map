{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.module.css","containers/ContactData/ContactData.module.css","components/Order/CheckoutSummary/CheckoutSummary.js","containers/ContactData/ContactData.js","containers/Checkout/Checkout.js"],"names":["Input","props","inputElement","inputtype","className","classes","InputElement","onChange","changed","Label","label","module","exports","CheckoutSummary","style","textAlign","width","margin","Burger","ingredients","Button","buttonType","clicked","checkoutContinue","checkoutCancelled","ContactData","state","orderForm","name","email","handleContactFormSubmit","event","preventDefault","order","price","totalPrice","customer","userId","onOrder","token","history","inputChangeHandler","udpatedForm","target","value","setState","form","onSubmit","this","type","placeholder","required","loading","Spinner","Component","connect","burgerBuilder","auth","dispatch","orderData","purchaseBurger","withError","withRouter","axios","Checkout","checkoutContinueHandler","replace","checkoutCancelledHandler","goBack","summary","to","path","match","url","component"],"mappings":"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","file":"static/js/4.aa0b59c6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst Input = props => {\r\n  let inputElement;\r\n  switch (props.inputtype) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={classes.InputElement}\r\n          onChange={props.changed}\r\n          {...props}\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = <textarea {...props} onChange={props.changed} />;\r\n      break;\r\n    default:\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label className={classes.Label}>{props.label}</label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3L-Cj\",\"Label\":\"Input_Label__5EmBI\",\"InputElement\":\"Input_InputElement__3QcsQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__pz1-c\"};","import React from \"react\";\r\n\r\nimport Burger from \"../../Burger/Burger\";\r\nimport Button from \"../../UI/Button/Button\";\r\n\r\nconst CheckoutSummary = props => {\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <div style={{ width: \"100%\", margin: \" auto\" }}>\r\n        <Burger ingredients={props.ingredients} />\r\n      </div>\r\n      <Button buttonType=\"Success\" clicked={props.checkoutContinue}>\r\n        Continue?\r\n      </Button>\r\n      <Button buttonType=\"Danger\" clicked={props.checkoutCancelled}>\r\n        Cancel\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutSummary;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { purchaseBurger } from \"../../store/actions/index\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport classes from \"./ContactData.module.css\";\r\nimport axios from \"../../axios-orders\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport withError from \"../../components/UI/withError/withError\";\r\n\r\nclass ContactData extends Component {\r\n  state = {\r\n    orderForm: {\r\n      name: \"\",\r\n      email: \"\"\r\n    }\r\n  };\r\n\r\n  handleContactFormSubmit = event => {\r\n    //   Order the burger here. send firebase stuff.\r\n    event.preventDefault();\r\n    const order = {\r\n      ingredients: this.props.ingredients,\r\n      price: this.props.totalPrice,\r\n      customer: {\r\n        name: this.state.orderForm.name,\r\n        email: this.state.orderForm.email\r\n      },\r\n      userId: this.props.userId\r\n    };\r\n    this.props.onOrder(order, this.props.token, this.props.history);\r\n  };\r\n\r\n  inputChangeHandler = event => {\r\n    const udpatedForm = { ...this.state.orderForm };\r\n    udpatedForm[event.target.name] = event.target.value;\r\n    this.setState({\r\n      orderForm: udpatedForm\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let form = (\r\n      <form onSubmit={this.handleContactFormSubmit}>\r\n        <Input\r\n          inputtype=\"input\"\r\n          type=\"text\"\r\n          label=\"Name\"\r\n          name=\"name\"\r\n          placeholder=\"Enter Name\"\r\n          required\r\n          changed={event => this.inputChangeHandler(event)}\r\n        />\r\n        <Input\r\n          inputtype=\"input\"\r\n          type=\"email\"\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          required\r\n          placeholder=\"Enter Email\"\r\n          changed={event => this.inputChangeHandler(event)}\r\n        />\r\n        <Button buttonType={\"Success\"}>Order</Button>\r\n      </form>\r\n    );\r\n    if (this.props.loading) {\r\n      form = <Spinner />;\r\n    }\r\n\r\n    return (\r\n      <div className={classes.ContactData}>\r\n        <h4>Enter Contact Details</h4>\r\n        {form}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ingredients: state.burgerBuilder.ingredients,\r\n    totalPrice: state.burgerBuilder.totalPrice,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onOrder: (orderData, token, history) =>\r\n      dispatch(purchaseBurger(orderData, token, history))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withError(withRouter(ContactData), axios));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\r\nimport ContactData from \"../ContactData/ContactData\";\r\n\r\nclass Checkout extends Component {\r\n  checkoutContinueHandler = () => {\r\n    this.props.history.replace(\"/checkout/contact-details\");\r\n  };\r\n\r\n  checkoutCancelledHandler = () => {\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    // if ingredients are null then redirect to / page\r\n    let summary = <Redirect to=\"/\" />;\r\n    if (this.props.ingredients) {\r\n      summary = (\r\n        <div>\r\n          <CheckoutSummary\r\n            ingredients={this.props.ingredients}\r\n            checkoutContinue={this.checkoutContinueHandler}\r\n            checkoutCancelled={this.checkoutCancelledHandler}\r\n          />\r\n          <Route\r\n            path={this.props.match.url + \"/contact-details\"}\r\n            component={ContactData}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return summary;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ingredients: state.burgerBuilder.ingredients\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n"],"sourceRoot":""}